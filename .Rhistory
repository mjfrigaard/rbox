knitr::opts_chunk$set(
echo = TRUE,
results = 'asis',
collapse = TRUE,
comment = "#> ")
options(width = 60)
library(tidyverse)
library(stringr)
fs::dir_tree("pkg/box-main/")
fs::dir_tree("pkg/box-main/", recurse = FALSE)
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#> ")
options(width = 60)
library(tidyverse)
library(stringr)
fs::dir_create("example")
fs::file_create("example/hello.R")
box::use(example/hello_world)
pak::pkg_install('klmr/box@dev')
box::use(example/hello)
example$hello('Martin')
example$hello('Martin')
fs::dir_create("example")
fs::file_create("example/hello.R")
example$hello('Martin')
box::use(example/hello)
ls()
fs::dir_create("example")
fs::file_create("example/hello_world.R")
box::use(example/hello)
box::use(example/hello)
box::use(example/hello_world)
ls()
box::use(example/hello_world)
ls()
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#> ")
options(width = 60)
library(tidyverse)
library(stringr)
pak::pkg_install('klmr/box@dev')
fs::dir_create("example")
fs::file_create("example/hello_world.R")
box::use(example/hello_world)
ls()
hello_world$hello('Ross')
hello_world$hello('Martin')
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#> ")
options(width = 60)
library(tidyverse)
library(stringr)
library(cli)
box::use(example/hello_world)
ls()
fs::dir_tree('box-pkg/box-main/inst')
fs::dir_tree('.')
fs::dir_tree("box-pkg/box-main/", recurse = FALSE)
searchpaths()
search()
# what does search() do?
search()
.GlobalEnv
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#> ")
options(width = 60)
library(tidyverse)
library(stringr)
library(cli)
fs::dir_tree('pkg/box-main/vignettes/', recurse = TRUE)
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#")
options(width = 60)
library(cli)
library(sloop)
library(fs)
library(kableExtra)
ggp2$scatter()
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#")
options(width = 60)
library(cli)
library(sloop)
library(fs)
library(kableExtra)
fs::dir_tree(".", recurse = FALSE)
box::use(hello/hello_world)
hello_world
names(hello_world)
hello_world$hello('Martin')
hello_world$bye('Martin')
box_use_df <- data.frame(
check.names = FALSE,
`Inside box::use()` = c(
"package", "pkg = package",
"package = package[foo, bar]", "package[my_foo = foo, ...]"
),
Action = c(
"imports 'package', does not attach any function names",
"imports 'package' with alias ('pkg'), does not attach any function names",
"imports 'package' and attaches the function names 'package::foo()' and 'package::bar()'",
"imports 'package' with alias ('my_foo') for 'foo' and attaches all exported function names"
)
)
kbl(box_use_df) |>
kable_paper()
# load import module
box::use(
penguins/import
)
# use import
import$import()
# load import module
box::use(
penguins/read
)
# use import
raw_peng <- read$raw()
raw_peng |> head()
# load clean module
box::use(
penguins/clean
)
clean$prep() |> str()
box::use(
penguins/ggp2
)
ggp2
ls(ggp2)
ggp2$scatter()
extrafont::loadfonts()
fs::dir_tree(".", type = "dir", recurse = FALSE)
fs::dir_tree(".", type = "dir", recurse = TRUE)
fs::dir_tree(".", type = "dir", recurse = FALSE)
box::use(
penguins/ggp2
)
ggp2
fs::dir_tree("penguins")
fs::dir_tree("c")
build_shared_lib = function(object_names) {
# Change working directory so R finds the Makevars.
old_dir = setwd(box::file())
on.exit(setwd(old_dir))
exitcode = system2('R', c('CMD', 'SHLIB', paste0(object_names, '.c')))
stopifnot(exitcode == 0L)
}
build_shared_lib('hello')
