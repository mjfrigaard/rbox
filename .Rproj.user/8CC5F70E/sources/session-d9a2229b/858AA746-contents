---
title: "`box` examples"
output: github_document
knit: (function(inputFile, encoding) {
      out_dir <- "../";
      rmarkdown::render(inputFile,
                        encoding=encoding,
                        output_dir=file.path(dirname(inputFile), out_dir))})
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = TRUE, 
  collapse = TRUE,
  comment = "#> ")
options(width = 60)
library(tidyverse)
library(stringr)
library(cli)
```

Package is loaded using [`pak`](https://pak.r-lib.org/), which checks for installation, and then loads.

```{r pak-inst, eval=FALSE, message=FALSE}
if (!requireNamespace('pak')) {
    install.packages('pak', repos = 'https://r-lib.github.io/p/pak/dev/')
}
```

`pak::pkg_install()` package below:

```{r install, eval=FALSE, message=FALSE, warning=FALSE}
pak::pkg_install('klmr/box@dev')
```


## Examples

The examples are in `docs/boxes/`

```{r tree-examples, echo=FALSE}
fs::dir_create("boxes/")
fs::file_create("boxes/hello.R")
fs::dir_tree("boxes/")
```

### `hello_world`

Now assume we've stored the following module in `docs/boxes/hello.R`:

``` r
#' @export
hello = function(name) {
    message('Hello, ', name, '!')
}

#' @export
bye = function(name) {
    message('Goodbye ', name, '!')
}
```

To use this module, we can use `box::use()` and refer to the path (unquoted)

```{r}
box::use(boxes/hello_world)
ls()
```

To use the `hello()` function in `example/hello_world.R`, we can use **`R script$function()`**:

```{r use-box-fun}
hello_world$hello('Martin')
```




